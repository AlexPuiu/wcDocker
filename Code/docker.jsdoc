/**
 * Options for a [docker]{@link wcDocker} instance.
 * 
 * @typedef {Object} wcDocker~Options
 * @property {String} [themePath='Themes'] - A folder path where all docker theme files can be found.
 * @property {String} [theme='default'] - The active docker theme.
 * @property {String} [loadingClass='fa fa-spinner fa-pulse'] - Any class name to use for the loading screen icon.
 * @property {Boolean} [allowContextMenu=true] - Overrides the default right click menu with ones that interact with docker.
 * @property {Boolean} [hideOnResize=false] - If true, panels will hide their contents as they are being resized.
 * @property {Boolean} [allowCollapse=true] - Allows users to collapse panels to the sides of the docker view.
 * @property {Number} [responseRate=10] - This determines how often updates are performed (in milliseconds).
 */

/**
 * A rectangle structure.
 *
 * @typedef {Object} wcDocker~Rect
 * @property {Number|String} [x] - X coordinate of the rectangle. Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [y] - Y coordinate of the rectangle. Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [w] - Width of the rectangle. Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [h] - Height of the rectangle. Can be a pixel position, or a string with a 'px' or '%' suffix.
 */

/**
 * A coordinate structure.
 *
 * @typedef {Object} wcDocker~Coordinate
 * @property {Number} x - X coordinate.
 * @property {Number} y - Y coordinate.
 */

/**
 * A 2D size structure.
 *
 * @typedef {Object} wcDocker~Size
 * @property {Number} x - Width.
 * @property {Number} y - Height.
 */

/**
 * @typedef {Object} wcDocker~Scrollable
 * @property {Boolean} x - Whether scrolling is enabled in the horizontal direction.
 * @property {Boolean} y - Whether scrolling is enabled in the vertical direction.
 */

 /**
 * Options for adding a new panel.
 *
 * @typedef {Object} wcDocker~PanelOptions
 * @property {Number|String} [x] - X coordinate of the panel center (if floating). Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [y] - Y coordinate of the panel center (if floating). Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [w] - Desired width of the panel. Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {Number|String} [h] - Desired height of the panel. Can be a pixel position, or a string with a 'px' or '%' suffix.
 * @property {wcDocker.TAB} [tabOrientation] - Desired position of tab widgets when using [wcDocker.DOCK.STACKED]{@link wcDocker.DOCK}. <b>Not supported on IE8 or below.</b>
 */

/**
 * Options object for registering new panel types.
 * 
 * @typedef wcDocker~registerOptions
 * @property {wcDocker~onCreatePanel} options.onCreate - A function or an object constructor for the panel.
 * @property {String} [options.icon]                   - A CSS class name to draw an icon in the panels tab widget.
 * @property {String} [options.faicon]                 - An icon name using the [Font-Awesome]{@link http://fortawesome.github.io/Font-Awesome/} library. You must download and link to the library first.
 * @property {String|Boolean} [options.title]          - Assign a custom name to the panels tab. A false value will hide the tab entirely.
 * @property {Boolean} [options.isPrivate]             - If true, the user will not be able to create this panel type.
 * @property {Number} [options.limit]                  - Enforces a limited number of this panel type from being created by the user.
 * @property {wcPanel~options} [options.options]       - A custom options object to be passed into the new panel constructor or creation function as the second parameter.
 */

 /**
 * A function or an object constructor for the panel. This function is called using the 'new' operator.
 *
 * @callback wcDocker~onCreatePanel
 * @param {wcPanel} panel - The panel being constructed.
 * @param {wcPanel~options} [options] - An options object passed in from [wcDocker.registerPanelType]{@link wcDocker#registerPanelType}'s options.options parameter.
 */

/**
 * An event handler callback. Each is registered to a event type using the [wcDocker.on]{@link wcDocker~on} or [wcPanel.on]{@link wcPanel~on} functions.
 *
 * @event wcDocker~onEvent
 * @type {Function}
 * @param {wcPanel|NULL} panel - The panel invoking the event, or NULL if global.
 * @param {Object} [data] - A data object passed by the invoker.
 */

